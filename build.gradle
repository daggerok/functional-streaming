plugins {
  id "idea"
  id "eclipse"
  id "com.avast.gradle.docker-compose" version "0.6.13"
  id "io.spring.dependency-management" version "1.0.4.RELEASE" apply false
}

allprojects { ap ->

  ap.apply plugin: "java"
  ap.apply plugin: "maven"
  ap.apply plugin: "io.spring.dependency-management"

  version "0.0.2"
  group "daggerok"
  sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

  ap.repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/libs-snapshot" }
  }

  ap.dependencies {
    if (ap.projectDir.absolutePath.contains("streaming-support")) return
    //compile project(":streaming-support").sourceSets.main.output
    compile(project(":streaming-support"))
  }
}

dockerCompose {
  useComposeFiles = [project.file("docker-compose.yaml")]
  // captureContainersOutput = true
  captureContainersOutput = false
  stopContainers = true
  removeContainers = true
  removeImages = "Local"
  removeVolumes = true
  removeOrphans = true
  forceRecreate = true
  waitForTcpPorts = false
  projectName = project.name
}

composeUp.dependsOn assemble

task wrapper(type: Wrapper) {
  gradleVersion = "4.6-rc-2"
}

defaultTasks "clean", "build"
